---
// Navbar.astro
import ThemeIcon from "./ThemeIcon.astro";

// Navigation items
const navItems = [
  { label: "Home", path: "/" },
  { label: "About", path: "/about" },
  { label: "Works", path: "/works" },
  { label: "Blog", path: "/blog" },
  { label: "Now", path: "/now" },
  { label: "Contact", path: "/contact" },
];

const currentPath = Astro.url.pathname;
---

<header class="py-5">
  <nav class="flex items-center justify-between">
    <!-- Logo -->
    <a href="/" class="logo font-bold text-xl">
      <span
        class="text-transparent bg-clip-text bg-gradient-to-r from-[rgb(var(--primary))] to-[rgb(var(--accent))]"
      >
        Juan Jose Morales
      </span>
    </a>

    <!-- Desktop Nav Links -->
    <div class="hidden md:flex items-center space-x-6">
      {
        navItems.map((item) => (
          <a
            href={item.path}
            class={`nav-link ${currentPath === item.path ? "active" : ""}`}
          >
            {item.label}
          </a>
        ))
      }
    </div>

    <!-- Right-side buttons -->
    <div class="flex items-center space-x-4">
      <!-- Single ThemeIcon -->
      <ThemeIcon />

      <!-- Hamburger -->
      <button
        id="menu-toggle"
        class="md:hidden p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
  </nav>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="hidden mt-4 md:hidden">
    <div class="flex flex-col space-y-3 py-3">
      {
        navItems.map((item) => (
          <a
            href={item.path}
            class={`mobile-nav-link ${currentPath === item.path ? "active" : ""}`}
          >
            {item.label}
          </a>
        ))
      }
    </div>
  </div>
</header>

<style>
  .nav-link {
    padding: 0.5rem;
    color: rgb(var(--text-color));
    font-weight: 500;
    position: relative;
    transition: color 0.2s ease;
  }
  .nav-link:hover,
  .nav-link.active {
    color: rgb(var(--primary));
    text-decoration: none;
  }
  .nav-link::after {
    content: "";
    position: absolute;
    width: 0;
    height: 2px;
    bottom: 0;
    left: 50%;
    background: linear-gradient(
      to right,
      rgb(var(--primary)),
      rgb(var(--accent))
    );
    transition: all 0.3s ease;
  }
  .nav-link:hover::after,
  .nav-link.active::after {
    width: 80%;
    left: 10%;
  }

  .mobile-nav-link {
    padding: 0.75rem 0;
    color: rgb(var(--text-color));
    font-weight: 500;
    border-bottom: 1px solid rgba(var(--border-color), 0.5);
    transition: color 0.2s ease;
  }
  .mobile-nav-link:hover,
  .mobile-nav-link.active {
    color: rgb(var(--primary));
    text-decoration: none;
  }
</style>

<script>
  // Toggles the mobile menu open/close
  function setupMobileMenu() {
    const menuToggle = document.getElementById("menu-toggle");
    const mobileMenu = document.getElementById("mobile-menu");

    if (!menuToggle || !mobileMenu) {
      return;
    }

    menuToggle.onclick = (event) => {
      event.stopPropagation();
      mobileMenu.classList.toggle("hidden");
    };

    document.onclick = (event) => {
      const target = event.target as HTMLElement;
      const clickOutside =
        !mobileMenu.contains(target) && !menuToggle.contains(target);
      if (!mobileMenu.classList.contains("hidden") && clickOutside) {
        mobileMenu.classList.add("hidden");
      }
    };
  }

  // Initialize on page load
  setupMobileMenu();
  document.addEventListener("astro:page-load", setupMobileMenu);
</script>
