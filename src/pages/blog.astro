---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";

interface BlogPost {
  id: string;
  data: {
    title: string;
    pubDate: Date;
    description: string;
    author: string;
    image?: {
      url: string;
      alt: string;
    };
    tags: string[];
  };
}

const pageTitle = "Blog";
const allPosts = await getCollection("blog");
---

<Layout pageTitle={pageTitle}>
  <div class="max-w-3xl mx-auto">
    <header class="py-8">
      <h1 class="text-3xl font-bold mb-4">Blog</h1>
      <p class="text-lg text-gray-600 dark:text-gray-300">
        A place for my notes, experiments, and thoughts on coding, music, and
        games.
      </p>
    </header>

    <div class="space-y-8">
      {
        allPosts.map((post: any) => (
          <article class="bg-white dark:bg-gray-900 shadow-sm rounded-lg overflow-hidden border border-gray-200 dark:border-gray-800 transition-shadow hover:shadow-md">
            <a href={`/posts/${post.id}/`} class="block">
              {post.data.image && (
                <div class="aspect-video w-full overflow-hidden">
                  <img
                    src={post.data.image.url}
                    alt={post.data.image.alt}
                    class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
                  />
                </div>
              )}

              <div class="p-6">
                <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2">
                  <time datetime={post.data.pubDate.toISOString()}>
                    {new Date(post.data.pubDate).toLocaleDateString("en-US", {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                  </time>
                  <span class="mx-2">â€¢</span>
                  <span>{post.data.author}</span>
                </div>

                <h2 class="text-xl font-bold mb-2 text-gray-900 dark:text-white hover:text-purple-600 dark:hover:text-purple-400 transition-colors">
                  {post.data.title}
                </h2>

                <p class="text-gray-600 dark:text-gray-300 mb-4">
                  {post.data.description}
                </p>

                <div class="flex flex-wrap gap-2">
                  {post.data.tags.map((tag: any) => (
                    <a
                      href={`/tags/${tag}`}
                      class="inline-block px-2 py-1 text-xs font-medium bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 rounded hover:bg-purple-200 dark:hover:bg-purple-800 transition-colors"
                    >
                      {tag}
                    </a>
                  ))}
                </div>
              </div>
            </a>
          </article>
        ))
      }
    </div>
  </div>
</Layout>
