---
import { getCollection, getEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const projectEntries = await getCollection("projects");
  return projectEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Format date
const formattedDate = new Date(entry.data.date).toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
});
---

<Layout pageTitle={entry.data.title} description={entry.data.description}>
  <article class="max-w-3xl mx-auto">
    <div class="mb-8">
      <a
        href="/works"
        class="inline-flex items-center text-primary hover:underline mb-6 transition-colors"
      >
        <svg
          class="w-4 h-4 mr-2"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Back to Projects
      </a>

      <h1 class="text-3xl font-bold mb-4">{entry.data.title}</h1>

      <div
        class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-6"
      >
        <time datetime={entry.data.date.toISOString()}>
          {formattedDate}
        </time>
      </div>
    </div>

    <!-- Project Links -->
    <div class="flex flex-wrap gap-4 mb-8">
      {
        entry.data.liveUrl && (
          <a
            href={entry.data.liveUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="btn-primary transition-all duration-300 hover:scale-105"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 mr-2"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
              />
            </svg>
            View Live Site
          </a>
        )
      }

      {
        entry.data.githubUrl && (
          <a
            href={entry.data.githubUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="btn-secondary transition-all duration-300 hover:scale-105"
          >
            <svg viewBox="0 0 24 24" class="h-5 w-5 mr-2" fill="currentColor">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z" />
            </svg>
            View on GitHub
          </a>
        )
      }
    </div>

    <!-- Project Technologies -->
    <div class="mb-8">
      <h3 class="text-lg font-semibold mb-2">Technologies</h3>
      <div class="flex flex-wrap gap-2">
        {
          entry.data.technologies.map((tech) => (
            <span class="badge">{tech}</span>
          ))
        }
      </div>
    </div>

    <!-- Project Images -->
    {
      entry.data.images && entry.data.images.length > 0 && (
        <div class="mb-8">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            {entry.data.images.map((image) => (
              <div class="overflow-hidden rounded-lg shadow-md transition-transform duration-300 hover:scale-[1.02]">
                <img src={image.url} alt={image.alt} class="w-full h-auto" />
              </div>
            ))}
          </div>
        </div>
      )
    }

    <!-- Project Content -->
    <div class="prose prose-lg dark:prose-invert prose-primary max-w-none">
      <Content />
    </div>
  </article>
</Layout>
